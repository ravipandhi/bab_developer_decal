Tools for Dapp development:

Truffle handles boilerplate code. (Sets up the project structure)
Ganache spins us a local blockchain instance.

*Project stucture:
Contracts: contains our source code; the old contract points to the new contract(a new version)
Migrations: add scripts for staging deployment tasks;
Test:where the test cases lies;

command 'ganache-cli' generates 10 ethereum accounts
command 'truffle console' takes you to truffle console where you can compile contracts, deploy, test etc.

IMP: Overloaded functions does not work with truffle (it works in remix). It was supposed to work in v5 but still does not.  

How to execute:




let betting = await Betting.deployed()
let accounts = await web3.eth.getAccounts()
betting.set_oracle(accounts[1])
betting.make_a_bet(2, {value: 20000000000000000000, from:accounts[3]})
betting.make_a_bet(1, {value: 10000000000000000000, from:accounts[2]})
betting.get_gamblers_list()
betting.get_total_amount()
betting.is_the_bet_same()
betting.decide_winners(1)
betting.decide_the_outcome(1,{from:accounts[1]})

betting.take_my_winning_amount(5000000000000000000, {from:accounts[3]})

betting.take_my_winning_amount(1000000000000000000, {from:accounts[2]})
betting.take_my_winning_amount(5000000000000000000, {from:accounts[2]})
betting.take_my_winning_amount(5000000000000000000, {from:accounts[2]})
